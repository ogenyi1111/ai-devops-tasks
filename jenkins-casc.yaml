jenkins:
  systemMessage: "Jenkins configured automatically using JCasC"
  numExecutors: 2
  scmCheckoutRetryCount: 3
  mode: NORMAL
  securityRealm:
    local:
      allowsSignup: false
      users:
        - id: "admin"
          password: "${JENKINS_ADMIN_PASSWORD}"
  authorizationStrategy:
    roleBased:
      roles:
        global:
          - name: "admin"
            permissions:
              - "Overall/Administer"
            assignments:
              - "admin"
          - name: "developer"
            permissions:
              - "Overall/Read"
              - "Job/Build"
              - "Job/Read"
            assignments:
              - "developer"

tool:
  git:
    installations:
      - name: "Default"
        home: "git"
  maven:
    installations:
      - name: "Maven 3.9.6"
        home: "/usr/share/maven"
  nodejs:
    installations:
      - name: "Node.js 20.x"
        home: "/usr/local/nodejs"
  docker:
    installations:
      - name: "Docker"
        home: "/usr/bin/docker"

unclassified:
  location:
    url: "http://jenkins:8080"
  timestamper:
    allPipelines: true
  gitHubConfiguration:
    apiRateLimitChecker: ThrottleForNormalize

jobs:
  - script: >
      pipelineJob('example-pipeline') {
        definition {
          cps {
            script('''
              pipeline {
                agent any
                environment {
                  DOCKER_REGISTRY = 'registry.example.com'
                  DOCKER_IMAGE = 'myapp'
                }
                stages {
                  stage('Checkout') {
                    steps {
                      checkout scm
                    }
                  }
                  stage('Build') {
                    steps {
                      sh 'mvn clean package'
                    }
                  }
                  stage('Test') {
                    steps {
                      sh 'mvn test'
                    }
                  }
                  stage('Build Docker') {
                    steps {
                      sh 'docker build -t ${DOCKER_REGISTRY}/${DOCKER_IMAGE}:${BUILD_NUMBER} .'
                    }
                  }
                }
                post {
                  always {
                    cleanWs()
                  }
                }
              }
            ''')
          }
        }
      }

plugins:
  required:
    - git:4.15.1
    - configuration-as-code:1.59
    - pipeline-model-definition:2.2114.v2654ca_721309
    - docker-workflow:1.28
    - maven-plugin:3.20
    - nodejs:1.5.1
    - role-strategy:6.2.0
    - timestamper:1.18
    - workflow-aggregator:2.6
    - ws-cleanup:0.45
